---
layout: slide
title:  "Presentation X | An Intro to Computer Security"
description: A 5 Minute Introduction to Computer Security
theme: black
transition: slide
---

<section data-markdown>
<script type="text/template">

![slideshow_logo](/assets/images/code_academy.png) <!-- .element: width="300px" style="background:none; border:none; box-shadow:none;" -->


## Offensive Security 101

*The 5 minute elevator pitch...*

</script>
</section>

<section data-markdown>

## What is Offensive Security?

</section>

<section data-markdown>

### Key Concept: Confidentiality

_"My data can't be read by a malicious party, only by the intended receipient"_

</section>

<section>

<h3> Buffer overflow: the classic exploit </h3> 
<p align="left">
<br>
Let's dive into an example of how confidentiality could be broken in a very basic program...
</p>
</section>

<section>

<h3>'Simple' C Code</h3>

<pre><code style="background:none; box-shadow:none;">int authenticated = 0; // 0 false, 1 true
char entered_password[20]; // array of characters (a string)

printf("Enter the password: "); // provide a prompt
gets(entered_password); // read in user input
// check if password matches:
if (strcmp(entered_password, "supersecurepassword") != 0) {
    printf ("Incorrect Password \n");
} else {
    printf ("Correct Password \n");
    authenticated = 1;
}
if (authenticated) {
    printf ("You've been authenticated! \n");
}
</code></pre> 
</section>

<section data-markdown>

## What happened?

</section>

<section>

<h3> What's in memory? </h3>

<pre><code data-noescape style="background:none; box-shadow:none;" class="nohighlight">
char pass[20] = [   --20 wide--   ]
user input    = AAAAAAA...AAAAAAAAA<mark>AAAAAAAA</mark>
</code></pre> 
<br>
<p align='left' style="font-size:30px">The data highlighed in <mark>yellow</mark> is to big to fit in our defined buffer, and therefore ends up overwriting our "authenticated" flag, due to how memory is laid out in a computer.</p>
</section>

<section>

<h3> Offensive Security: The Goal </h3>
<p align='left'>
<br>
In essence; to discover unexpected, unintended and potentially dangerous program behaviour.  
<br>
<br>
If you want to learn how do this yourself, please attend the course!
</p>
</section>

<section data-markdown>

## Fin.

</section>

